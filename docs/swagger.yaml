basePath: /v1.
definitions:
  achievement.AllDetailSwaggerResponse:
    properties:
      data:
        items:
          properties:
            achievement:
              properties:
                achievement_assets_id:
                  example: 1
                  type: integer
                achievement_type_id:
                  example: 3
                  type: integer
                award_assets_id:
                  example: 1
                  type: integer
                created_at:
                  example: "2025-09-02T12:48:06.37622+03:00"
                  type: string
                description:
                  example: description
                  type: string
                id:
                  example: 1
                  type: integer
                name:
                  example: two dialogs
                  type: string
                updated_at:
                  example: "2025-09-02T12:48:06.37622+03:00"
                  type: string
              type: object
            achievement_assets:
              properties:
                client_path_file:
                  example: /images/achievement/01K44X76FBXJYK4D153WHZFXH7.webp
                  type: string
                created_at:
                  example: "2025-09-02T12:48:06.37622+03:00"
                  type: string
                extension:
                  example: .webp
                  type: string
                id:
                  example: 1
                  type: integer
                name_file:
                  example: 01K44X76FBXJYK4D153WHZFXH7.webp
                  type: string
                name_file_without_extension:
                  example: 01K44X76FBXJYK4D153WHZFXH7
                  type: string
                old_extension:
                  example: .png
                  type: string
                old_name_file:
                  example: img.png
                  type: string
                quality:
                  example: 30
                  type: integer
                server_path_file:
                  example: testdata/file_server/images/achievement/01K44X76FBXJYK4D153WHZFXH7.webp
                  type: string
                updated_at:
                  example: "2025-09-02T12:48:06.37622+03:00"
                  type: string
              type: object
            award_assets:
              properties:
                client_path_file:
                  example: /images/award/01K44X76GAFBZBJ1W1WX4NSJT4.webp
                  type: string
                created_at:
                  example: "2025-09-02T12:48:06.37622+03:00"
                  type: string
                extension:
                  example: .webp
                  type: string
                id:
                  example: 1
                  type: integer
                name_file:
                  example: 01K44X76GAFBZBJ1W1WX4NSJT4.webp
                  type: string
                name_file_without_extension:
                  example: 01K44X76GAFBZBJ1W1WX4NSJT4
                  type: string
                old_extension:
                  example: .jpg
                  type: string
                old_name_file:
                  example: img.jpg
                  type: string
                quality:
                  example: 30
                  type: integer
                server_path_file:
                  example: testdata/file_server/images/award/01K44X76GAFBZBJ1W1WX4NSJT4.webp
                  type: string
                updated_at:
                  example: "2025-09-02T12:48:06.37622+03:00"
                  type: string
              type: object
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  achievement.DetailSwaggerResponse:
    properties:
      data:
        properties:
          achievement:
            properties:
              achievement_assets_id:
                example: 1
                type: integer
              achievement_type_id:
                example: 3
                type: integer
              award_assets_id:
                example: 1
                type: integer
              created_at:
                example: "2025-09-02T12:48:06.37622+03:00"
                type: string
              description:
                example: description
                type: string
              id:
                example: 1
                type: integer
              name:
                example: two dialogs
                type: string
              updated_at:
                example: "2025-09-02T12:48:06.37622+03:00"
                type: string
            type: object
          achievement_assets:
            properties:
              client_path_file:
                example: /images/achievement/01K44X76FBXJYK4D153WHZFXH7.webp
                type: string
              created_at:
                example: "2025-09-02T12:48:06.37622+03:00"
                type: string
              extension:
                example: .webp
                type: string
              id:
                example: 1
                type: integer
              name_file:
                example: 01K44X76FBXJYK4D153WHZFXH7.webp
                type: string
              name_file_without_extension:
                example: 01K44X76FBXJYK4D153WHZFXH7
                type: string
              old_extension:
                example: .png
                type: string
              old_name_file:
                example: img.png
                type: string
              quality:
                example: 30
                type: integer
              server_path_file:
                example: testdata/file_server/images/achievement/01K44X76FBXJYK4D153WHZFXH7.webp
                type: string
              updated_at:
                example: "2025-09-02T12:48:06.37622+03:00"
                type: string
            type: object
          award_assets:
            properties:
              client_path_file:
                example: /images/award/01K44X76GAFBZBJ1W1WX4NSJT4.webp
                type: string
              created_at:
                example: "2025-09-02T12:48:06.37622+03:00"
                type: string
              extension:
                example: .webp
                type: string
              id:
                example: 1
                type: integer
              name_file:
                example: 01K44X76GAFBZBJ1W1WX4NSJT4.webp
                type: string
              name_file_without_extension:
                example: 01K44X76GAFBZBJ1W1WX4NSJT4
                type: string
              old_extension:
                example: .jpg
                type: string
              old_name_file:
                example: img.jpg
                type: string
              quality:
                example: 30
                type: integer
              server_path_file:
                example: testdata/file_server/images/award/01K44X76GAFBZBJ1W1WX4NSJT4.webp
                type: string
              updated_at:
                example: "2025-09-02T12:48:06.37622+03:00"
                type: string
            type: object
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  achievement.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  admin.AddAdminUserSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
          id:
            example: 1
            type: integer
          telegram_id:
            example: "1"
            type: string
          updated_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  admin.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  admin.ExistsSwaggerResponse:
    properties:
      data:
        example: true
        type: boolean
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  auth.CheckDTO:
    properties:
      telegram_id:
        minLength: 1
        type: string
      token:
        minLength: 1
        type: string
    required:
    - telegram_id
    - token
    type: object
  auth.CheckSwaggerResponse:
    properties:
      data:
        properties:
          exp_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          telegram_id:
            example: "1"
            type: string
          token:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZWxlZ3JhbV9pZCI6IjEyMzQ1Njc4OTAiLCJleHAiOjE3NTY4MTYyMjAsImlhdCI6MTc1NjgxMjYyMH0.F39iYi6QaEEeQ9pTBO4HL_sOyfaAjRJs7IQiCSQihGE
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  auth.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  auth.RefreshDTO:
    properties:
      refresh_token:
        minLength: 1
        type: string
      telegram_id:
        minLength: 1
        type: string
    required:
    - refresh_token
    - telegram_id
    type: object
  auth.RefreshSwaggerResponse:
    properties:
      data:
        properties:
          access_exp_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          access_token:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZWxlZ3JhbV9pZCI6IjEyMzQ1Njc4OTAiLCJleHAiOjE3NTY4MTYyMjAsImlhdCI6MTc1NjgxMjYyMH0.F39iYi6QaEEeQ9pTBO4HL_sOyfaAjRJs7IQiCSQihGE
            type: string
          refresh_exp_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          refresh_token:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZWxlZ3JhbV9pZCI6IjEyMzQ1Njc4OTAiLCJleHAiOjE3NTc0MTc0MjAsImlhdCI6MTc1NjgxMjYyMH0.BTdkTO_6gMG_zmGi1kse2bXoTJ9iU5SZUSl6Pp4upYk
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  auth.SignInDTO:
    properties:
      first_name:
        minLength: 1
        type: string
      last_name:
        minLength: 1
        type: string
      telegram_id:
        minLength: 1
        type: string
      username:
        minLength: 1
        type: string
    required:
    - telegram_id
    type: object
  auth.SignInSwaggerResponse:
    properties:
      data:
        properties:
          access_exp_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          access_token:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZWxlZ3JhbV9pZCI6IjEyMzQ1Njc4OTAiLCJleHAiOjE3NTY4MTYyMjAsImlhdCI6MTc1NjgxMjYyMH0.F39iYi6QaEEeQ9pTBO4HL_sOyfaAjRJs7IQiCSQihGE
            type: string
          refresh_exp_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          refresh_token:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZWxlZ3JhbV9pZCI6IjEyMzQ1Njc4OTAiLCJleHAiOjE3NTc0MTc0MjAsImlhdCI6MTc1NjgxMjYyMH0.BTdkTO_6gMG_zmGi1kse2bXoTJ9iU5SZUSl6Pp4upYk
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  clientassets.AllSwaggerResponse:
    properties:
      data:
        items:
          properties:
            client_path_file:
              example: /images/client/01K44X76FBXJYK4D153WHZFXH7.webp
              type: string
            created_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
            extension:
              example: .webp
              type: string
            id:
              example: 1
              type: integer
            name_file:
              example: 01K44X76FBXJYK4D153WHZFXH7.webp
              type: string
            name_file_without_extension:
              example: 01K44X76FBXJYK4D153WHZFXH7
              type: string
            old_extension:
              example: .png
              type: string
            old_name_file:
              example: img.png
              type: string
            quality:
              example: 30
              type: integer
            server_path_file:
              example: testdata/file_server/images/client/01K44X76FBXJYK4D153WHZFXH7.webp
              type: string
            updated_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  clientassets.CreateSwaggerResponse:
    properties:
      data:
        properties:
          client_path_file:
            example: /images/client/01K44X76FBXJYK4D153WHZFXH7.webp
            type: string
          created_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
          extension:
            example: .webp
            type: string
          id:
            example: 1
            type: integer
          name_file:
            example: 01K44X76FBXJYK4D153WHZFXH7.webp
            type: string
          name_file_without_extension:
            example: 01K44X76FBXJYK4D153WHZFXH7
            type: string
          old_extension:
            example: .png
            type: string
          old_name_file:
            example: img.png
            type: string
          quality:
            example: 30
            type: integer
          server_path_file:
            example: testdata/file_server/images/client/01K44X76FBXJYK4D153WHZFXH7.webp
            type: string
          updated_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  clientassets.DeleteByIDSwaggerResponse:
    properties:
      data:
        items:
          properties:
            client_path_file:
              example: /images/client/01K44X76FBXJYK4D153WHZFXH7.webp
              type: string
            created_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
            extension:
              example: .webp
              type: string
            id:
              example: 1
              type: integer
            name_file:
              example: 01K44X76FBXJYK4D153WHZFXH7.webp
              type: string
            name_file_without_extension:
              example: 01K44X76FBXJYK4D153WHZFXH7
              type: string
            old_extension:
              example: .png
              type: string
            old_name_file:
              example: img.png
              type: string
            quality:
              example: 30
              type: integer
            server_path_file:
              example: testdata/file_server/images/client/01K44X76FBXJYK4D153WHZFXH7.webp
              type: string
            updated_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  clientassets.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  dailytask.CreateDTO:
    properties:
      dialog_completed_need:
        type: integer
      experience_points_need:
        type: integer
      is_active:
        type: boolean
      lessons_finished_need:
        type: integer
      tasks_completed_need:
        type: integer
      words_learned_need:
        type: integer
      words_translate_need:
        type: integer
    type: object
  dailytask.CreateDailyTaskSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
          dialog_completed_need:
            example: 1
            type: integer
          experience_points_need:
            example: 1
            type: integer
          id:
            example: 1
            type: integer
          is_active:
            example: true
            type: boolean
          lessons_finished_need:
            example: 1
            type: integer
          tasks_completed_need:
            example: 1
            type: integer
          updated_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
          words_learned_need:
            example: 1
            type: integer
          words_translate_need:
            example: 1
            type: integer
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  dailytask.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  event.Actions:
    properties:
      dialog_completed:
        type: integer
      lessons_finished:
        type: integer
      tasks_completed:
        type: integer
      words_learned:
        type: integer
      words_translate:
        type: integer
    type: object
  event.CreateEventsDTO:
    properties:
      actions:
        $ref: '#/definitions/event.Actions'
      event_type:
        maxLength: 50
        minLength: 1
        type: string
      telegram_id:
        minLength: 1
        type: string
    required:
    - actions
    - event_type
    - telegram_id
    type: object
  event.CreateSwaggerResponse:
    properties:
      data: {}
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  event.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  eventtype.AllSwaggerResponse:
    properties:
      data:
        items:
          properties:
            amount:
              example: 10
              type: integer
            created_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
            description:
              example: some description
              type: string
            id:
              example: 1
              type: integer
            is_active:
              example: true
              type: boolean
            is_send_notification:
              example: true
              type: boolean
            name:
              example: some name
              type: string
            notification_message:
              example: some message
              type: string
            updated_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
            xp:
              example: 20
              type: integer
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  eventtype.CreateDTO:
    properties:
      amount:
        type: number
      description:
        minLength: 1
        type: string
      is_active:
        type: boolean
      is_send_notification:
        type: boolean
      name:
        minLength: 1
        type: string
      notification_message:
        minLength: 1
        type: string
      xp:
        type: integer
    required:
    - name
    - xp
    type: object
  eventtype.CreateSwaggerResponse:
    properties:
      data:
        properties:
          amount:
            example: 10
            type: integer
          created_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
          description:
            example: some description
            type: string
          id:
            example: 1
            type: integer
          is_active:
            example: true
            type: boolean
          is_send_notification:
            example: true
            type: boolean
          name:
            example: some name
            type: string
          notification_message:
            example: some message
            type: string
          updated_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
          xp:
            example: 20
            type: integer
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  eventtype.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  eventtype.GetByNameSwaggerResponse:
    properties:
      data:
        items:
          properties:
            amount:
              example: 10
              type: integer
            created_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
            description:
              example: some description
              type: string
            id:
              example: 1
              type: integer
            is_active:
              example: true
              type: boolean
            is_send_notification:
              example: true
              type: boolean
            name:
              example: some name
              type: string
            notification_message:
              example: some message
              type: string
            updated_at:
              example: "2025-09-02T12:48:06.37622+03:00"
              type: string
            xp:
              example: 20
              type: integer
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  experiencepoint.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  experiencepoint.GetLeaderboardTopWeekDTO:
    properties:
      limit:
        maximum: 30
        type: integer
      tz:
        enum:
        - Europe/Moscow
        type: string
    required:
    - limit
    - tz
    type: object
  experiencepoint.GetLeaderboardTopWeekForUserDTO:
    properties:
      limit:
        maximum: 30
        type: integer
      telegram_id:
        minLength: 1
        type: string
      tz:
        enum:
        - Europe/Moscow
        type: string
    required:
    - limit
    - telegram_id
    - tz
    type: object
  experiencepoint.GetLeaderboardTopWeekForUserSwaggerResponse:
    properties:
      data:
        items:
          properties:
            display_name:
              example: some name
              type: string
            medal:
              example: some medal
              type: string
            position:
              example: 1
              type: integer
            telegram_id:
              example: "1"
              type: string
            xp:
              example: 20
              type: integer
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  experiencepoint.GetLeaderboardTopWeekSwaggerResponse:
    properties:
      data:
        items:
          properties:
            display_name:
              example: some name
              type: string
            medal:
              example: some medal
              type: string
            position:
              example: 1
              type: integer
            telegram_id:
              example: "1"
              type: string
            xp:
              example: 20
              type: integer
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  localizedtext.CreateTextContentDTO:
    properties:
      code:
        minLength: 1
        type: string
      description:
        minLength: 1
        type: string
      page:
        minLength: 1
        type: string
    required:
    - code
    - page
    type: object
  localizedtext.CreateTextContentSwaggerResponse:
    properties:
      data:
        properties:
          code:
            example: some code
            type: string
          description:
            example: some description
            type: string
          id:
            example: 1
            type: integer
          page:
            example: some page
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  localizedtext.CreateTextTranslationDTO:
    properties:
      content_id:
        type: integer
      lang:
        type: string
      value:
        minLength: 1
        type: string
    required:
    - content_id
    - lang
    - value
    type: object
  localizedtext.CreateTextTranslationSwaggerResponse:
    properties:
      data:
        properties:
          content_id:
            example: 1
            type: integer
          id:
            example: 1
            type: integer
          lang:
            example: en
            type: string
          value:
            example: some value
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  localizedtext.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  localizedtext.GetTextsByLanguageSwaggerResponse:
    properties:
      data:
        additionalProperties:
          items:
            properties:
              code:
                example: some code
                type: string
              description:
                example: some description
                type: string
              value:
                example: some value
                type: string
            type: object
          type: array
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  notification.AllSwaggerResponse:
    properties:
      data:
        items:
          properties:
            created_at:
              example: "2025-09-02T15:30:20.095307198+03:00"
              type: string
            id:
              example: 1
              type: integer
            message:
              properties:
                text:
                  example: some text
                  type: string
                title:
                  example: some title
                  type: string
              type: object
            sent_at:
              example: "2025-09-02T15:30:20.095307198+03:00"
              type: string
            status:
              example: PENDING
              type: string
            telegram_id:
              example: "1"
              type: string
            type:
              example: some type
              type: string
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  notification.CreateDTO:
    properties:
      message:
        $ref: '#/definitions/notification.Message'
      telegram_id:
        type: string
      type:
        type: string
    type: object
  notification.CreateSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          id:
            example: 1
            type: integer
          message:
            properties:
              text:
                example: some text
                type: string
              title:
                example: some title
                type: string
            type: object
          sent_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          status:
            example: PENDING
            type: string
          telegram_id:
            example: "1"
            type: string
          type:
            example: some type
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  notification.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  notification.Message:
    properties:
      text:
        type: string
      title:
        type: string
    type: object
  studiedlanguage.AllSwaggerResponse:
    properties:
      data:
        items:
          properties:
            created_at:
              example: "2025-09-02T15:30:20.095307198+03:00"
              type: string
            description:
              example: some description
              type: string
            id:
              example: 1
              type: integer
            lang:
              example: en
              type: string
            name:
              example: some name
              type: string
            updated_at:
              example: "2025-09-02T15:30:20.095307198+03:00"
              type: string
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  studiedlanguage.CreateDTO:
    properties:
      description:
        minLength: 1
        type: string
      lang:
        type: string
      name:
        minLength: 1
        type: string
    required:
    - description
    - lang
    - name
    type: object
  studiedlanguage.CreateSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          description:
            example: some description
            type: string
          id:
            example: 1
            type: integer
          lang:
            example: en
            type: string
          name:
            example: some name
            type: string
          updated_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  studiedlanguage.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  subscription.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  subscription.ExistsByTelegramIDSwaggerResponse:
    properties:
      data:
        example: true
        type: boolean
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  subscription.GetByTelegramIDSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          expires_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          id:
            example: 1
            type: integer
          is_active:
            example: true
            type: boolean
          subscribed_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          telegram_id:
            example: "1"
            type: string
          updated_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  user.CreateDailyTaskSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          first_name:
            example: some first name
            type: string
          id:
            example: 1
            type: integer
          last_name:
            example: some last name
            type: string
          telegram_id:
            example: "1"
            type: string
          updated_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          username:
            example: some username
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  user.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  userachievement.AllDetailByTelegramIDSwaggerResponse:
    properties:
      data:
        items:
          properties:
            achievement_path_file:
              example: /images/achievement/01K44X76FBXJYK4D153WHZFXH7.webp
              type: string
            award_path_file:
              example: /images/award/01K44X76GAFBZBJ1W1WX4NSJT4.webp
              type: string
            description:
              example: some description
              type: string
            id:
              example: 1
              type: integer
            name:
              example: some name
              type: string
            telegram_id:
              example: "1"
              type: string
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userachievement.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  userbalance.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  userbalance.GetUserBalanceSwaggerResponse:
    properties:
      data:
        properties:
          balance:
            example: 100
            type: number
          created_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
          id:
            example: 1
            type: integer
          telegram_id:
            example: "1"
            type: string
          updated_at:
            example: "2025-09-02T12:48:06.37622+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userdailytask.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  userdailytask.GetCurrentDailyTaskByTelegramIDSwaggerResponse:
    properties:
      data:
        properties:
          date:
            example: "2025-09-02T00:00:00Z"
            type: string
          id:
            example: 1
            type: integer
          is_completed:
            example: true
            type: boolean
          progress:
            properties:
              dialog_completed:
                example: 1
                type: integer
              experience_points:
                example: 10
                type: integer
              lessons_finished:
                example: 1
                type: integer
              tasks_completed:
                example: 1
                type: integer
              words_learned:
                example: 1
                type: integer
              words_translate:
                example: 1
                type: integer
            type: object
          progress_percent:
            properties:
              dialog_completed:
                example: 1
                type: integer
              experience_points:
                example: 10
                type: integer
              lessons_finished:
                example: 1
                type: integer
              tasks_completed:
                example: 1
                type: integer
              words_learned:
                example: 1
                type: integer
              words_translate:
                example: 1
                type: integer
            type: object
          requirements:
            properties:
              dialog_completed_need:
                example: 1
                type: integer
              experience_points_need:
                example: 10
                type: integer
              lessons_finished_need:
                example: 1
                type: integer
              tasks_completed_need:
                example: 1
                type: integer
              words_learned_need:
                example: 1
                type: integer
              words_translate_need:
                example: 1
                type: integer
            type: object
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userdailytask.GetDailyTaskWeekSummaryByTelegramIDSwaggerResponse:
    properties:
      data:
        items:
          properties:
            date:
              example: "2025-09-01T00:00:00Z"
              type: string
            is_completed:
              example: true
              type: boolean
          type: object
        type: array
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userstats.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  userstats.GetLevelByTelegramIDSwaggerResponse:
    properties:
      data:
        properties:
          level:
            example: 1
            type: integer
          telegram_id:
            example: "1"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userstats.GetLevelInfoByTelegramIDSwaggerResponse:
    properties:
      data:
        properties:
          level:
            example: 1
            type: integer
          level_ceil_xp:
            example: 100
            type: integer
          level_floor_xp:
            example: 0
            type: integer
          level_name:
            example: level 1
            type: string
          next_level:
            example: 2
            type: integer
          progress_ratio:
            example: 0
            type: number
          xp_in_level:
            example: 0
            type: integer
          xp_level_size:
            example: 100
            type: integer
          xp_to_next:
            example: 100
            type: integer
          xp_total:
            example: 0
            type: integer
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userstudiedlanguage.CreateDTO:
    properties:
      studied_language_id:
        type: integer
      telegram_id:
        minLength: 1
        type: string
    required:
    - studied_language_id
    - telegram_id
    type: object
  userstudiedlanguage.CreateSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          id:
            example: 1
            type: integer
          studied_language_id:
            example: 1
            type: integer
          telegram_id:
            example: "1"
            type: string
          updated_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userstudiedlanguage.ErrorSwaggerResponse:
    properties:
      data: {}
      error:
        example: some error
        type: string
      message:
        example: some error
        type: string
      status:
        example: false
        type: boolean
    type: object
  userstudiedlanguage.ExistsByTelegramIDSwaggerResponse:
    properties:
      data:
        example: true
        type: boolean
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userstudiedlanguage.GetByTelegramIDSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          description:
            example: some description
            type: string
          id:
            example: 1
            type: integer
          lang:
            example: en
            type: string
          name:
            example: some name
            type: string
          studied_language_id:
            example: 1
            type: integer
          telegram_id:
            example: "1"
            type: string
          updated_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
  userstudiedlanguage.UpdateDTO:
    properties:
      studied_language_id:
        type: integer
      telegram_id:
        minLength: 1
        type: string
    required:
    - studied_language_id
    - telegram_id
    type: object
  userstudiedlanguage.UpdateSwaggerResponse:
    properties:
      data:
        properties:
          created_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
          id:
            example: 1
            type: integer
          studied_language_id:
            example: 1
            type: integer
          telegram_id:
            example: "1"
            type: string
          updated_at:
            example: "2025-09-02T15:30:20.095307198+03:00"
            type: string
        type: object
      error:
        example: ""
        type: string
      message:
        example: success
        type: string
      status:
        example: true
        type: boolean
    type: object
host: localhost:50050
info:
  contact: {}
  description: |-
    This is the backend API for the Lingramm Telegram Web Application.
    It provides endpoints for user interactions, game logic, statistics, tools, and more.
    All endpoints are secured and optimized for real-time communication with Telegram Mini Apps.
  title: Lingramm API — Telegram Web App Backend
  version: "1.0"
paths:
  /v1/achievement:
    post:
      consumes:
      - multipart/form-data
      description: Creates an achievement with name, type, optional description, and
        uploads for achievement & award images (multipart/form-data).
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Achievement name
        in: formData
        name: name
        required: true
        type: string
      - description: Achievement type identifier
        in: formData
        name: achievement_type
        required: true
        type: string
      - description: Optional description
        in: formData
        name: description
        type: string
      - description: Achievement image file
        in: formData
        name: file_achievement
        required: true
        type: file
      - description: Award image file
        in: formData
        name: file_award
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/achievement.DetailSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
      summary: Create achievement (admin)
      tags:
      - Achievement
  /v1/achievement/all:
    get:
      consumes:
      - application/json
      description: Returns a full list of achievements with their condition, achievement
        assets and award assets
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/achievement.AllDetailSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
      summary: Get all achievement details (admin)
      tags:
      - Achievement
  /v1/achievement/id/{achievementID}:
    delete:
      consumes:
      - application/json
      description: Deletes the achievement and its related assets by the given achievementID.
        Returns the deleted record.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Achievement ID
        in: path
        name: achievementID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/achievement.DetailSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
      summary: Delete achievement detail by ID (admin)
      tags:
      - Achievement
    get:
      consumes:
      - application/json
      description: Returns the achievement and its related assets (achievement & award)
        by the given achievementID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Achievement ID
        in: path
        name: achievementID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/achievement.DetailSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/achievement.ErrorSwaggerResponse'
      summary: Get achievement detail by ID (admin)
      tags:
      - Achievement
  /v1/admin/add/{telegramID}:
    get:
      consumes:
      - application/json
      description: Grants admin role to the user with the given Telegram ID and returns
        the created admin record.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/admin.AddAdminUserSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/admin.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/admin.ErrorSwaggerResponse'
      summary: Add admin user (admin)
      tags:
      - Admin
  /v1/admin/exists/{telegramID}/exists:
    get:
      consumes:
      - application/json
      description: Returns true if a user with the given Telegram ID is an admin,
        false otherwise.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/admin.ExistsSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/admin.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/admin.ErrorSwaggerResponse'
      summary: Check admin existence by Telegram ID (admin)
      tags:
      - Admin
  /v1/auth/check:
    post:
      consumes:
      - application/json
      description: Check if the provided Telegram ID and token are valid
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Check request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.CheckDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful check user token
          schema:
            $ref: '#/definitions/auth.CheckSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/auth.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.ErrorSwaggerResponse'
      summary: Check user token
      tags:
      - Authentication
  /v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the access token using the provided Telegram ID and refresh
        token
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Refresh request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with new tokens
          schema:
            $ref: '#/definitions/auth.RefreshSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/auth.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.ErrorSwaggerResponse'
      summary: Refresh user token
      tags:
      - Authentication
  /v1/auth/signin:
    post:
      consumes:
      - application/json
      description: Sign in a user using their Telegram ID, username, first name, and
        last name
      parameters:
      - description: Sign in request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SignInDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with tokens
          schema:
            $ref: '#/definitions/auth.SignInSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/auth.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.ErrorSwaggerResponse'
      summary: Sign in user
      tags:
      - Authentication
  /v1/bigcache/info:
    get:
      consumes:
      - application/json
      description: Iterates over BigCache and returns a map of entries (keys/values)
        for inspection.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with BigCache entries
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Iterate BigCache (admin)
      tags:
      - Big cache
  /v1/daily_task:
    post:
      consumes:
      - application/json
      description: Creates a daily task record. **At least one** of the `*_need` fields
        must be provided and greater than 0.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Daily task data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dailytask.CreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/dailytask.CreateDailyTaskSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/dailytask.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dailytask.ErrorSwaggerResponse'
      summary: Create daily task (admin)
      tags:
      - Daily task
  /v1/event:
    post:
      consumes:
      - application/json
      description: 'Creates an events payload for a user: specify `telegram_id`, an
        `event_type`, and optional action counters (each provided value must be >
        0).'
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Events payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/event.CreateEventsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/event.CreateSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/event.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/event.ErrorSwaggerResponse'
      summary: Create events
      tags:
      - Event
  /v1/event_type:
    post:
      consumes:
      - application/json
      description: |-
        Creates an event type with XP reward and optional amount/notification. Rules:
        • `xp` is required and must be > 0
        • if `amount` is provided, it must be > 0
        • if `is_send_notification` is true, `notification_message` must be provided
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event type data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/eventtype.CreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/eventtype.CreateSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/eventtype.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/eventtype.ErrorSwaggerResponse'
      summary: Create event type (admin)
      tags:
      - Event type
  /v1/event_type/all:
    get:
      consumes:
      - application/json
      description: Returns a full list of event types with XP reward, optional amount,
        and notification settings.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/eventtype.AllSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/eventtype.ErrorSwaggerResponse'
      summary: Get all event types (admin)
      tags:
      - Event type
  /v1/event_type/name:
    get:
      consumes:
      - application/json
      description: Returns a single event type matched by the provided `name` query
        parameter.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event type name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/eventtype.GetByNameSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/eventtype.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/eventtype.ErrorSwaggerResponse'
      summary: Get event type by name (admin)
      tags:
      - Event type
  /v1/experience_point/leaderboard/week_top:
    post:
      consumes:
      - application/json
      description: |-
        Returns the top users by XP for the current week in the given timezone.
        Rules:
        • `limit` is required, must be > 0 and ≤ 30
        • `tz` is required and must be `Europe/Moscow`
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Leaderboard request
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/experiencepoint.GetLeaderboardTopWeekDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/experiencepoint.GetLeaderboardTopWeekSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/experiencepoint.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/experiencepoint.ErrorSwaggerResponse'
      summary: Get weekly leaderboard (XP)
      tags:
      - Experience point
  /v1/experience_point/leaderboard/week_top/user:
    post:
      consumes:
      - application/json
      description: |-
        Returns the weekly XP leaderboard centered around the specified user (by Telegram ID).
        Rules:
        • `limit` is required, must be > 0 and ≤ 30
        • `telegram_id` is required
        • `tz` is required and must be `Europe/Moscow`
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Leaderboard request for user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/experiencepoint.GetLeaderboardTopWeekForUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/experiencepoint.GetLeaderboardTopWeekForUserSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/experiencepoint.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/experiencepoint.ErrorSwaggerResponse'
      summary: Get weekly leaderboard for user (XP)
      tags:
      - Experience point
  /v1/fs/client_assets:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a single image file (multipart/form-data) to create a client
        asset. Only supported image content types are accepted.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Image file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/clientassets.CreateSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/clientassets.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/clientassets.ErrorSwaggerResponse'
      summary: Upload client asset (admin)
      tags:
      - Client asset
  /v1/fs/client_assets/all:
    get:
      consumes:
      - application/json
      description: Returns a full list of uploaded client asset images and their metadata.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/clientassets.AllSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/clientassets.ErrorSwaggerResponse'
      summary: Get all client assets (admin)
      tags:
      - Client asset
  /v1/fs/client_assets/id/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the client asset with the given ID and returns the deleted
        record.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Client asset ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/clientassets.DeleteByIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/clientassets.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/clientassets.ErrorSwaggerResponse'
      summary: Delete client asset by ID (admin)
      tags:
      - Client asset
  /v1/internal_currency/user/balance/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns the current internal currency balance for the user identified
        by Telegram ID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userbalance.GetUserBalanceSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userbalance.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userbalance.ErrorSwaggerResponse'
      summary: Get user balance
      tags:
      - Internal currency
  /v1/localized_text/content:
    post:
      consumes:
      - application/json
      description: Creates a localized text content entry with required `code` and
        `page`, and optional `description`.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Text content data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/localizedtext.CreateTextContentDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/localizedtext.CreateTextContentSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/localizedtext.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/localizedtext.ErrorSwaggerResponse'
      summary: Create text content (admin)
      tags:
      - Localized text
  /v1/localized_text/texts/language/{language}:
    get:
      consumes:
      - application/json
      description: Returns a map where keys are page codes and values are arrays of
        localized texts for the specified 2-letter language code.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 2-letter language code (e.g., en, ru)
        in: path
        name: language
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/localizedtext.GetTextsByLanguageSwaggerResponse'
              type: array
            type: object
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/localizedtext.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/localizedtext.ErrorSwaggerResponse'
      summary: Get texts by language
      tags:
      - Localized text
  /v1/localized_text/translation:
    post:
      consumes:
      - application/json
      description: |-
        Creates a translation for a text content entry.
        Rules:
        • `content_id` is required and must be > 0
        • `lang` must be a 2-letter code (e.g., "en", "ru")
        • `value` is required
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Text translation data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/localizedtext.CreateTextTranslationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/localizedtext.CreateTextTranslationSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/localizedtext.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/localizedtext.ErrorSwaggerResponse'
      summary: Create text translation (admin)
      tags:
      - Localized text
  /v1/notification:
    post:
      consumes:
      - application/json
      description: Creates a notification with type and message (title/text) for the
        specified Telegram ID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Notification payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/notification.CreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/notification.CreateSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/notification.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/notification.ErrorSwaggerResponse'
      summary: Create notification (admin)
      tags:
      - Notification
  /v1/notification/all/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns a list of notifications for the specified Telegram ID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/notification.AllSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/notification.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/notification.ErrorSwaggerResponse'
      summary: Get all notifications by Telegram ID
      tags:
      - Notification
  /v1/studied_language:
    post:
      consumes:
      - application/json
      description: Creates a studied language with required `name`, `description`,
        and a 2-letter `lang` code.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Studied language data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/studiedlanguage.CreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/studiedlanguage.CreateSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/studiedlanguage.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/studiedlanguage.ErrorSwaggerResponse'
      summary: Create studied language (admin)
      tags:
      - Studied language
  /v1/studied_language/all:
    get:
      consumes:
      - application/json
      description: Returns a full list of studied languages.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/studiedlanguage.AllSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/studiedlanguage.ErrorSwaggerResponse'
      summary: Get all studied languages
      tags:
      - Studied language
  /v1/subscription/exists/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns true if the specified Telegram ID has an active subscription,
        false otherwise.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/subscription.ExistsByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/subscription.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/subscription.ErrorSwaggerResponse'
      summary: Check subscription existence by Telegram ID
      tags:
      - Subscription
  /v1/subscription/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns the subscription record for the specified Telegram ID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/subscription.GetByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/subscription.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/subscription.ErrorSwaggerResponse'
      summary: Get subscription by Telegram ID
      tags:
      - Subscription
  /v1/user/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns the user record for the specified Telegram ID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/user.CreateDailyTaskSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/user.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/user.ErrorSwaggerResponse'
      summary: Get user by Telegram ID
      tags:
      - User
  /v1/user_achievement/all/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns a list of user's achievements with name, description, and
        asset paths for the specified Telegram ID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userachievement.AllDetailByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userachievement.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userachievement.ErrorSwaggerResponse'
      summary: Get all user achievements detail by Telegram ID (admin)
      tags:
      - User achievement
  /v1/user_daily_task/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns the current day's daily task for the specified Telegram
        ID, including requirements, progress, and percentage completion.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userdailytask.GetCurrentDailyTaskByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userdailytask.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userdailytask.ErrorSwaggerResponse'
      summary: Get current daily task by Telegram ID
      tags:
      - User daily task
  /v1/user_daily_task/week_summary/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns an array of 7 entries for the current week, each with the
        date and whether the daily task was completed.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            items:
              $ref: '#/definitions/userdailytask.GetDailyTaskWeekSummaryByTelegramIDSwaggerResponse'
            type: array
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userdailytask.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userdailytask.ErrorSwaggerResponse'
      summary: Get daily task week summary by Telegram ID
      tags:
      - User daily task
  /v1/user_stats/level/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns the current level for the specified Telegram ID.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userstats.GetLevelByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userstats.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userstats.ErrorSwaggerResponse'
      summary: Get user level by Telegram ID
      tags:
      - User stats
  /v1/user_stats/level_info/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: 'Returns detailed level progress data: total XP, current level,
        level floor/ceil XP, next level, XP within level, XP to next level, progress
        ratio, and level name.'
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userstats.GetLevelInfoByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userstats.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userstats.ErrorSwaggerResponse'
      summary: Get level info by Telegram ID
      tags:
      - User stats
  /v1/user_studied_language:
    post:
      consumes:
      - application/json
      description: |-
        Links a user (by Telegram ID) to a studied language. Rules:
        • `studied_languages_id` is required and must be > 0
        • `telegram_id` is required
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User studied language data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/userstudiedlanguage.CreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userstudiedlanguage.CreateSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
      summary: Create user studied language
      tags:
      - User studied language
    put:
      consumes:
      - application/json
      description: Updates the link between a user (by Telegram ID) and a studied
        language. Both fields are required.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/userstudiedlanguage.UpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userstudiedlanguage.UpdateSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
      summary: Update user studied language
      tags:
      - User studied language
  /v1/user_studied_language/exists/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns true if the specified Telegram ID has at least one studied
        language, false otherwise.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userstudiedlanguage.ExistsByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
      summary: Check user studied language by Telegram ID
      tags:
      - User studied language
  /v1/user_studied_language/telegram/{telegramID}:
    get:
      consumes:
      - application/json
      description: Returns the studied language record linked to the specified Telegram
        ID, including language metadata.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Telegram ID
        in: path
        name: telegramID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/userstudiedlanguage.GetByTelegramIDSwaggerResponse'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/userstudiedlanguage.ErrorSwaggerResponse'
      summary: Get user studied language by Telegram ID
      tags:
      - User studied language
  /v1/ws/notification/stream:
    get:
      description: |-
        Upgrades the connection to WebSocket and streams notifications for the specified Telegram ID.
        Server sends periodic pings; client may send `{"type":"ACK","id":<notification_id>}` to confirm delivery
        and `{"type":"PONG"}` to refresh presence.
      parameters:
      - default: Bearer <token>
        description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols (WebSocket established)
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/notification.ErrorSwaggerResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/notification.ErrorSwaggerResponse'
      summary: Notifications WebSocket stream
      tags:
      - Notification
swagger: "2.0"
