name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

x-redis-service: &redis
  image: redis:latest
  ports:
    - 63790:6379
  options: >-
    --health-cmd "redis-cli -a admin ping"
    --health-interval 5s
    --health-timeout 3s
    --health-retries 5

x-libvips-install: &libvips-install
  name: Install libvips (required for bimg)
  run: |
    sudo apt-get update
    sudo apt-get install -y libvips-dev

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.set-version.outputs.go-version }}
    steps:
      - id: set-version
        run: echo "go-version=1.24.2" >> "$GITHUB_OUTPUT"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.setup.outputs.go-version }}

      - <<: *libvips-install

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b $(go env GOPATH)/bin v2.1.5

      - name: Run golangci-lint
        run: golangci-lint run ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    services:
      redis: *redis
    env:
      REDIS_ADDR: 127.0.0.1:63790
      REDIS_PASSWORD: admin
      REDIS_PORT: 6379
      REDIS_DATABASES: 0
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.setup.outputs.go-version }}

      - <<: *libvips-install

      - name: Verify go.mod consistency
        run: |
          go mod tidy
          if ! git diff --exit-code go.mod go.sum; then
            echo "::error::Uncommitted changes after go mod tidy"
            exit 1
          fi

      - name: Run unit tests
        run: |
          EXCLUDE="/(mock|mocks|testdata|cmd|config|domain|apperrors)"
          go test -v $(go list ./... | grep -Ev "$EXCLUDE")

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    services:
      redis: *redis
    env:
      REDIS_ADDR: 127.0.0.1:63790
      REDIS_PASSWORD: admin
      REDIS_PORT: 6379
      REDIS_DATABASES: 0
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.setup.outputs.go-version }}

      - <<: *libvips-install

      - name: Run tests with coverage
        run: |
          EXCLUDE="/(mock|mocks|testdata|cmd|config|domain|apperrors)"
          go test -coverprofile=coverage.out $(go list ./... | grep -Ev "$EXCLUDE")
          go tool cover -func=coverage.out

#      - name: Enforce coverage threshold #TODO: если нужен % покрытия определенный.
#        run: |
#          percent=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
#          echo "Total coverage: $percent%"
#          threshold=70.0
#          if (( $(echo "$percent < $threshold" | bc -l) )); then
#            echo "::error::Test coverage below threshold ($threshold%)"
#            exit 1
#          fi

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test, lint, coverage]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.setup.outputs.go-version }}

      - <<: *libvips-install

      - name: Build binary
        run: |
          mkdir -p .bin
          go build -ldflags="-s -w" -trimpath -buildvcs=false -o .bin/app cmd/app/main.go

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-binary-${{ github.sha }}
          path: .bin/app