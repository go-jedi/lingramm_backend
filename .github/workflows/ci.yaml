name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.set-version.outputs.go-version }}
    steps:
      - id: set-version
        run: echo "go-version=1.22" >> "$GITHUB_OUTPUT"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.setup.outputs.go-version }}

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b $(go env GOPATH)/bin v1.57.2

      - name: Run golangci-lint
        run: golangci-lint run ./...


  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.setup.outputs.go-version }}

      - name: Verify go.mod consistency
        run: |
          go mod tidy
          if ! git diff --exit-code go.mod go.sum; then
            echo "::error::Uncommitted changes after go mod tidy"
            exit 1
          fi

      - name: Run unit tests
        run: go test -v ./...

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.setup.outputs.go-version }}

      - name: Run tests with coverage
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out

      - name: Enforce coverage threshold
        run: |
          percent=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total coverage: $percent%"
          threshold=80.0
          if (( $(echo "$percent < $threshold" | bc -l) )); then
            echo "::error::Test coverage below threshold ($threshold%)"
            exit 1
          fi

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint, coverage]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Build binary
        run: go build -v -o build/app ./...

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-binary
          path: build/app