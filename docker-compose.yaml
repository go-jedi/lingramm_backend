volumes:
  postgres_volume:
  rabbitmq_volume:

services:
#  lingvogramm_backend:
#    build: .
#    container_name: lingvogramm_backend
#    restart: always
#    ports:
#      - '50050:50050'
#    volumes:
#      - ./testdata/file_server:/root/testdata/file_server  # mount folder server in container
#    depends_on:
#      - postgres
#      - redis
#      - rabbitmq

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=${POSTGRES_TZ}
    ports:
      - "54320:5432"
    command: [
      "postgres",
      "-c", "timezone=${POSTGRES_TZ}",
      "-c", "log_timezone=${POSTGRES_TZ}"
    ]
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: always
    ports:
      - "63790:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=${REDIS_DATABASES}

  rabbitmq:
    image: rabbitmq:4.1.3-management-alpine
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    ports:
      - "56720:5672" # AMQP
      - "15672:15672" # Web UI
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 6