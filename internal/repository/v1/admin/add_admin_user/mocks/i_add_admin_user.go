// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	admin "github.com/go-jedi/lingramm_backend/internal/domain/admin"

	mock "github.com/stretchr/testify/mock"

	pgx "github.com/jackc/pgx/v5"
)

// IAddAdminUser is an autogenerated mock type for the IAddAdminUser type
type IAddAdminUser struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, tx, telegramID
func (_m *IAddAdminUser) Execute(ctx context.Context, tx pgx.Tx, telegramID string) (admin.Admin, error) {
	ret := _m.Called(ctx, tx, telegramID)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 admin.Admin
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, pgx.Tx, string) (admin.Admin, error)); ok {
		return rf(ctx, tx, telegramID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, pgx.Tx, string) admin.Admin); ok {
		r0 = rf(ctx, tx, telegramID)
	} else {
		r0 = ret.Get(0).(admin.Admin)
	}

	if rf, ok := ret.Get(1).(func(context.Context, pgx.Tx, string) error); ok {
		r1 = rf(ctx, tx, telegramID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIAddAdminUser creates a new instance of IAddAdminUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIAddAdminUser(t interface {
	mock.TestingT
	Cleanup(func())
}) *IAddAdminUser {
	mock := &IAddAdminUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
