// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	fiber "github.com/gofiber/fiber/v3"
	mock "github.com/stretchr/testify/mock"
)

// IMiddleware is an autogenerated mock type for the IMiddleware type
type IMiddleware struct {
	mock.Mock
}

// AuthMiddleware provides a mock function with given fields: c
func (_m *IMiddleware) AuthMiddleware(c fiber.Ctx) error {
	ret := _m.Called(c)

	if len(ret) == 0 {
		panic("no return value specified for AuthMiddleware")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(fiber.Ctx) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetTelegramIDFromContext provides a mock function with given fields: c
func (_m *IMiddleware) GetTelegramIDFromContext(c fiber.Ctx) (string, error) {
	ret := _m.Called(c)

	if len(ret) == 0 {
		panic("no return value specified for GetTelegramIDFromContext")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(fiber.Ctx) (string, error)); ok {
		return rf(c)
	}
	if rf, ok := ret.Get(0).(func(fiber.Ctx) string); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(fiber.Ctx) error); ok {
		r1 = rf(c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIMiddleware creates a new instance of IMiddleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIMiddleware(t interface {
	mock.TestingT
	Cleanup(func())
}) *IMiddleware {
	mock := &IMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
